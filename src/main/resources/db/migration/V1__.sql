CREATE SEQUENCE IF NOT EXISTS groups_seq START WITH 1 INCREMENT BY 50;

CREATE TABLE alternative
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    description VARCHAR(255),
    correct     BOOLEAN                                 NOT NULL,
    question_id VARCHAR(36),
    CONSTRAINT pk_alternative PRIMARY KEY (id)
);

CREATE TABLE exam_questions
(
    exam_id     BIGINT      NOT NULL,
    question_id VARCHAR(36) NOT NULL
);

CREATE TABLE exams
(
    id          BIGINT NOT NULL,
    name        VARCHAR(255),
    description VARCHAR(255),
    teacher_id  VARCHAR(255),
    group_id    BIGINT,
    points      INTEGER,
    start_time  TIMESTAMP WITHOUT TIME ZONE,
    end_time    TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_exams PRIMARY KEY (id)
);

CREATE TABLE groups
(
    id          BIGINT NOT NULL,
    name        VARCHAR(255),
    description VARCHAR(255),
    image       VARCHAR(255),
    CONSTRAINT pk_groups PRIMARY KEY (id)
);

CREATE TABLE groups_users
(
    group_id BIGINT       NOT NULL,
    user_id  VARCHAR(255) NOT NULL
);

CREATE TABLE questions
(
    id          VARCHAR(36) NOT NULL,
    description VARCHAR(255),
    image       VARCHAR(255),
    tip         VARCHAR(255),
    difficulty  VARCHAR(255),
    source      VARCHAR(255),
    author_id   VARCHAR(255),
    CONSTRAINT pk_questions PRIMARY KEY (id)
);

CREATE TABLE "user"
(
    registration VARCHAR(255) NOT NULL,
    user_type    VARCHAR(31),
    name         VARCHAR(255),
    email        VARCHAR(255),
    password     VARCHAR(255),
    phone        VARCHAR(255),
    about        VARCHAR(255),
    cpf          VARCHAR(255),
    active       BOOLEAN,
    birth_date   TIMESTAMP WITHOUT TIME ZONE,
    user_role    SMALLINT,
    cv_lattes    VARCHAR(255),
    website      VARCHAR(255),
    CONSTRAINT pk_user PRIMARY KEY (registration)
);

ALTER TABLE "user"
    ADD CONSTRAINT uc_user_cpf UNIQUE (cpf);

ALTER TABLE "user"
    ADD CONSTRAINT uc_user_email UNIQUE (email);

ALTER TABLE alternative
    ADD CONSTRAINT FK_ALTERNATIVE_ON_QUESTION FOREIGN KEY (question_id) REFERENCES questions (id);

ALTER TABLE exams
    ADD CONSTRAINT FK_EXAMS_ON_GROUP FOREIGN KEY (group_id) REFERENCES groups (id);

ALTER TABLE exams
    ADD CONSTRAINT FK_EXAMS_ON_TEACHER FOREIGN KEY (teacher_id) REFERENCES "user" (registration);

ALTER TABLE questions
    ADD CONSTRAINT FK_QUESTIONS_ON_AUTHOR FOREIGN KEY (author_id) REFERENCES "user" (registration);

ALTER TABLE exam_questions
    ADD CONSTRAINT fk_exaque_on_exam FOREIGN KEY (exam_id) REFERENCES exams (id);

ALTER TABLE exam_questions
    ADD CONSTRAINT fk_exaque_on_question FOREIGN KEY (question_id) REFERENCES questions (id);

ALTER TABLE groups_users
    ADD CONSTRAINT fk_grouse_on_group FOREIGN KEY (group_id) REFERENCES groups (id);

ALTER TABLE groups_users
    ADD CONSTRAINT fk_grouse_on_user FOREIGN KEY (user_id) REFERENCES public."user" (registration);